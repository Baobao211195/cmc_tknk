/**
* Controller of upload file phi cau truc.
*/
'use strict';
var myApp = angular.module('myApp');

myApp.controller('PhanCong_Controller', ['$scope',
										'$PopupMessage',
										'$uibModal',
										'$timeout',
										'$location',
										'$parse',
										'$rootScope',
										'contextPath',
										'quanLyToChucCNCTTKService',
										'Phancong_Service',
										function($scope,
												$PopupMessage,
												$uibModal,
												$timeout,
												$location,
												$parse,
												$rootScope,
												contextPath,
												quanLyToChucCNCTTKService,
												Phancong_Service){
	$scope.listUserPA = [];
	$scope.lstCongViec = [];
	$scope.lstPhanCong = [];
	$scope.listUserOfTongCuc = [];
	$scope.showReport = false;
	
	var phanCongDto = {};
	
	var URL_SERVICES = "http://localhost:8080/tkhq_2017_standard";
	
	var listType1 = ["CV_CHQ","CV_BCDK","CV_CO","CV_LICH","CV_PBTT","CV_DMTC","CV_PT"];

	var listType3 = ["CV_PVTK","CV_TGTK","CV_DTTM","CV_DCSL","CV_BCSL","CV_XDNG"];

	var type2 = "CV_KTMH";

	var typeHq = "CV_CHQ";

	var congViecEntiTy = {

		stt			: "",
		maCv 		: "",
		tenCv 		: "",
		maHq		: "",
		tenHq		: "",
		tuNgay 		: "",
		denNgay 	: "",
		matHang		: "",
		userIdPa1	: "",
		fullNamePa1 : "",
		userNamePa1	: "",
		userIdPa2	: "",
		fullNamePa2 : "",
		userNamePa2	: "",
		userIdPa3	: "",
		fullNamePa3 : "",
		userNamePa3	: "",
		ghiChu		: ""
	};

	$scope.congviec = {
		maCv  : "",
		tenCv : ""
	};

	$scope.isDisplayType1 = false;
	$scope.isDisplayType2 = false;
	$scope.isDisplayType3 = false;
	$scope.displayHQ = true;
	$scope.typeNhapXuat = '';
	$scope.showReport = false;

	var removeId  = "";

	init();

	$scope.changeCongViec = function (maCv){
		changeCv(maCv);
	}

	$scope.doOpenCreate = function(typeCreate) {
		showPopup ($scope.typeNhapXuat, congViecEntiTy, typeCreate ,$scope.congviec.maCv, $scope.congviec.tenCv);
	}

	$scope.doOpenEdit = function (idCv){
		isExistUpdatePhanCongCVByStt (idCv);
	}
	
	function isExistUpdatePhanCongCVByStt (idCv){
		Phancong_Service.GetPhanCongByStt(idCv, $scope.typeNhapXuat)
		.then(
			function(deferred){
				phanCongDto =  deferred;
				if (phanCongDto === null){
					$PopupMessage.Error("Công việc đã bị xóa bởi một người sử dụng khác.");
				} else {
					var phanCongEntity = getPhanCongEntity(idCv);
					showPopup ($scope.typeNhapXuat, phanCongEntity, "1", $scope.congviec.maCv, $scope.congviec.tenCv );
				}
			},
			function(errResponse){
				$PopupMessage.Error("Có lỗi trong quá trình xử lý thông tin.");
			}
		);
	}
	
	function isExistDeletePhanCongCVByStt(idCv){
		Phancong_Service.GetPhanCongByStt(idCv, $scope.typeNhapXuat)
		.then(
			function(deferred){
				phanCongDto =  deferred;
				if (phanCongDto === null){
					$PopupMessage.Error("Công việc đã bị xóa bởi một người sử dụng khác.");
				} else {
					$PopupMessage.Confirm('Bạn có chắc muốn xóa công việc', deleteCv, null);
				}
			},
			function(errResponse){
				$PopupMessage.Error("Có lỗi trong quá trình xử lý thông tin.");
			}
		);
	}

	$scope.doRemove = function(id){
		removeId = id;
		isExistDeletePhanCongCVByStt(id);
	}
	
	$scope.tabSelected1 = function(data){
		$scope.typeNhapXuat = data;
		getListPhanCong($scope.congviec.maCv, $scope.typeNhapXuat);
	}
	
	$scope.tabSelected2 = function(data){
		$scope.typeNhapXuat = data;
		getListPhanCong($scope.congviec.maCv, $scope.typeNhapXuat);
	}
	
	$scope.tabSelected3= function(data){
		$scope.typeNhapXuat = data;
		getListPhanCong($scope.congviec.maCv, $scope.typeNhapXuat);
	}
	
	$scope.tabSelected3= function(data){
		$scope.typeNhapXuat = data;
		getListPhanCong($scope.congviec.maCv, $scope.typeNhapXuat);
	}
	
	$scope.tabSelected4= function(data){
		$scope.typeNhapXuat = data;
		getListPhanCong($scope.congviec.maCv, $scope.typeNhapXuat);
	}
	
	$scope.doExport = function (typeKetXuat){

		var typeCv = getTypeCv($scope.congviec.maCv);
		exportData(typeKetXuat, $scope.congviec.maCv, $scope.typeNhapXuat, typeCv);
	}
	
	$scope.hideReport = function () {
		$scope.srcReport = "";	
		$scope.showReport = false;

	}
	
	function exportData (typeKetXuat, maCv, typeNhapXuat, typeCv){
		$scope.srcReport =  URL_SERVICES + "/phancong/export?" + "typeKetXuat="
						+  typeKetXuat +"&maCv=" + maCv + "&typeNhapXuat=" +  typeNhapXuat + "&typeCv=" +  typeCv ;
		
		if(typeKetXuat === 1){
			var modalInstance = $uibModal.open({
				animation : self.animationsEnabled,
				ariaLabelledBy : 'modal-title',
				ariaDescribedBy : 'modal-body',
				controller : 'ReportPhanCongCtrl',
				templateUrl : 'ReportPhanCong',
				windowClass : 'app-modal-window',
				resolve : {
					Url : function() {
						return $scope.srcReport
					}
				}
			});
			
		}
	}
	
	function getTypeCv(maCv){
		if (maCv === 'CV_CHQ'){
			return "1";
		} else if (maCv === 'CV_KTMH'){
			return "2";
		} else {
			return "3";
		}
	}
			
	function getPhanCongEntity (idCv){
		var enTity = {};
		for(var i = 0; i < $scope.lstPhanCong.length; i++){
			if ($scope.lstPhanCong[i].stt == idCv){
				enTity = angular.copy($scope.lstPhanCong[i]);
				break;
			}
		}
		enTity.maCv = $scope.congviec.maCv;
		enTity.tenCv = $scope.congviec.tenCv;
		return enTity;
	}

	function changeCv(maCv){
		if (maCv === "CV_CHQ"){
			$scope.displayHQ = true;
		} else {
			$scope.displayHQ = false;
		}
		$scope.congviec.maCv = maCv;
		$scope.congviec.tenCv = getTenCv (maCv);
		if (checkDisplayTye(maCv, listType3)){
			$scope.isDisplayType3 = true;
			$scope.isDisplayType1 = false;
			$scope.isDisplayType2 = false;
			$scope.typeNhapXuat = "X";
		} else if (maCv === type2){
			$scope.isDisplayType2 = true;
			$scope.isDisplayType1 = false;
			$scope.isDisplayType3 = false;
			$scope.typeNhapXuat = "X";
		} else {
			$scope.isDisplayType1 = true;
			$scope.isDisplayType2 = false;
			$scope.isDisplayType3 = false;
			$scope.typeNhapXuat = "";
		}
		getListPhanCong(maCv, $scope.typeNhapXuat);
	}

	function getTenCv (maCv){
		var ten = "";
		for (var i= 0; i < $scope.lstCongViec.length; i ++){
			if ($scope.lstCongViec[i].maCv === maCv){
				ten = $scope.lstCongViec[i].tenCv;
				break;
			}
		}
		return ten;
	}

	function deleteCv (){
		Phancong_Service.DeleteListCongViec(removeId)
			.then(
				function(deferred){
					$PopupMessage.Success("Xóa phân công công việc thành công.");
					getListPhanCong($scope.congviec.maCv, $scope.typeNhapXuat);
				},
				function(errResponse){
					$PopupMessage.Error("Có lỗi trong quá trình xử lý thông tin.");
				}
			);
	}

	function checkDisplayTye (maCv, listType){
		return listType.indexOf(maCv) > -1;
	}

	function init(){
		$scope.isDisplayType1 = true;
		$scope.isDisplayType2 = false;
		$scope.isDisplayType3 = false;
		$scope.showReport = false;
		getListCongViec();

	}

	function getListPhanCong (maCv, typeNhapXuat){
		Phancong_Service.GetPhanCongByMaCv(maCv, typeNhapXuat)
			.then(
				function(deferred){
					$scope.lstPhanCong = deferred;
				},
				function(errResponse){
					$PopupMessage.Error("Có lỗi trong quá trình xử lý thông tin.");
				}
			);
	}

	function getListCongViec (){
		Phancong_Service.GetCongViec()
			.then(
				function (deferred){
					$scope.lstCongViec = deferred;
					$scope.congviec.maCv = $scope.lstCongViec[0].maCv;
					$scope.congviec.tenCv = $scope.lstCongViec[0].tenCv
					getListPhanCong($scope.congviec.maCv, $scope.typeNhapXuat);
				},
				function (errResponse){
					Console.log("Có lỗi trong quá trình xử lý.")
				}
			);
	}

	function showPopup (typeNhapXuat, phanCongEntity, typeCreate, maCv, tenCv){
		var title = "";
		if (typeCreate === 2){
			title = "Thêm mới phân công công việc.";
		} else {
			title = "Thay đổi phân công công việc."
		}
		var modalInstance = $uibModal.open({
			animation : self.animationsEnabled,
			templateUrl : 'thaydoiCongViec',
			controller : 'thaydoiCongViecModalCtrl',
			size: 'lg',
			resolve : {
				phanConEntiTy : function() {
					return phanCongEntity;
				},
				typeNhapXuat : function() {
					return typeNhapXuat;
				},
				typeCreate :  function() {
					return typeCreate;
				},
				title : function (){
					return title;
				},
				maCv : function (){
					return maCv;
				},
				tenCv : function (){
					return tenCv;
				}

			}
		});
		
		modalInstance.result.then(function (data) {
			$scope.congviec.maCv = data.maCv;
			$scope.congviec.tenCv = data.tenCv;
			if(data.typeNhapXuat !== null){
				getListPhanCong($scope.congviec.maCv, data.typeNhapXuat);
			} else {
				getListPhanCong($scope.congviec.maCv, "");
			}
	    }, function () {
	      //$log.info('modal-component dismissed at: ' + new Date());
	    });
	}
}]);
myApp.controller('thaydoiCongViecModalCtrl', ['$scope',
												'$PopupMessage',
												'$uibModal',
												'$uibModalInstance',
												'title',
												'typeNhapXuat',
												'phanConEntiTy',
												'typeCreate',
												'maCv',
												'tenCv',
												'quanLyToChucCNCTTKService',
												'Phancong_Service',
												 function($scope,
												 		 $PopupMessage,
												 		 $uibModal,
												 		 $uibModalInstance,
												 		 title,
												 		 typeNhapXuat,
												 		 phanConEntiTy,
												 		 typeCreate,
												 		 maCv,
												 		 tenCv,
												 		 quanLyToChucCNCTTKService,
												 		 Phancong_Service){
	$scope.congviec = {};
	$scope.title 		= "";
	$scope.typeCreate   = typeCreate;
	$scope.typeNhapXuat = typeNhapXuat;
	
	$scope.formData = {};

	$scope.listUserNamesOfTongCuc = [];
	$scope.listDonVi = [];
	
	$scope.type2 = true;
	$scope.type1 = true;

	$scope.name = "";

	$scope.donVi = {
		ma : "",
		ten :""
	};

	$scope.user = {
		userId : "",
		userName : ""
	};

	$scope.user2 = {
		userId : "",
		userName : ""
	};

	$scope.user3 = {
		userId : "",
		userName : ""
	};

	init()

	 $scope.doClose = function () {
		var object = {
			typeNhapXuat : $scope.typeNhapXuat,
			maCv 		 : $scope.congviec.maCv,
			tenCv		 :  $scope.congviec.tenCv
		};
		$uibModalInstance.close(object);
	 };

	$scope.changeUserName1= function (userId){
		$scope.fullNamePa1 = GetUserFullNameByTongCuc(userId);
	}

	$scope.changeUserName2= function (userId){
		$scope.fullNamePa2 = GetUserFullNameByTongCuc(userId);
	}

	$scope.changeUserName3= function (userId){
		$scope.fullNamePa3 = GetUserFullNameByTongCuc(userId);
	}
	
	$scope.doChange = function(typeChange) {
		if ($scope.tuNgay !== "" && $scope.tuNgay !== undefined){
			if ($scope.tuNgay.getFullYear() < 1990){
				$PopupMessage.Error("Từ ngày lớn hơn năm 1990!");
				return;
			}
			
			if(!checkDateItem($scope.tuNgay)){
				$PopupMessage.Error("Từ ngày không hợp lệ");
				return;
			}
		}
		if($scope.denNgay !== "" && $scope.denNgay !== undefined){
  			if(!checkDateItem($scope.denNgay)){
  				$PopupMessage.Error("Đến ngày không hợp lệ.");
  				return;
  			}
  		}
		
		if(($scope.tuNgay !== "") && ($scope.denNgay !== "") && new Date ($scope.tuNgay) > new Date ($scope.denNgay)){
			$PopupMessage.Error("Từ ngày lớn hơn đến ngày.");
			return;
		}
		
		var data  = thietLapData();
		if (typeChange ===1 ){
			doInsertCv (data)
		} else {
			doUpdateCv (data);
		}
	}
	
	function kiemTraNgay(){
		if ($scope.tuNgay !== ""){
			if(!checkDateItem($scope.tuNgay)){
				$PopupMessage.Error("Từ ngày không hợp lệ.");
				return;
			}
		  }
	}
	
	function checkDateItem(dateCompare){
  		var currentDate = new Date();
  		var dateC = new Date(dateCompare);
  		
  		if (dateC.getFullYear() > currentDate.getFullYear()){
  			return false;
  		}else {
  			return true;
  		}
  		
  		if((dateC.getMonth() + 1) > (currentDate.getMonth() + 1)){
  			return false;
  		}else {
  			return true;
  		}
  		
  		if ((dateC.getMonth() + 1) > 12 || (dateC.getMonth() + 1) < 1){
  			return false;
  		}else {
  			return true;
  		}
  		
  		if (dateC.getDate() > currentDate.getDate()){
  			return false;
  		}else {
  			return true;
  		}
  		
  		if(dateC.getDate() > 31 || dateC.getDate() < 1){
  			return false;
  		}else {
  			return true;
  		}
  	}

	function doInsertCv (data){
		Phancong_Service.InsertCongViec(data)
			.then(
				function(deferred) {
					if (deferred !== null){
						$PopupMessage.Success("Thêm mới công việc thành công.");
						reload();
					} else {
						$PopupMessage.Error("Có lỗi trong quá trình xử lý thông tin.");
					}
				},
				function(errResponse) {
					console.error('Có lỗi trong quá trình xử lý thông tin.');
				}
			);
	}

	function doUpdateCv (data){
		Phancong_Service.UpdateCongViec(data)
			.then(
				function(deferred) {
					if (deferred !== null){
						$PopupMessage.Success("Cập nhât mới công việc thành công.");
					} else {
						$PopupMessage.Error("Có lỗi trong quá trình xử lý thông tin.");
					}
				},
				function(errResponse) {
					console.error('Có lỗi trong quá trình xử lý thông tin.');
				}
			);

	}

	function GetUserFullNameByTongCuc(userId){
		var fullName1 = "";
		for (var i = 0; i < $scope.listUserNamesOfTongCuc.length ; i ++){
			if (userId == $scope.listUserNamesOfTongCuc[i].userId){
				fullName1 = $scope.listUserNamesOfTongCuc[i].fullName;
				break;
			}
		}
		return fullName1;
	}

	function GetUserNameByTongCuc(userId){
		var userName = "";
		for (var i = 0; i < $scope.listUserNamesOfTongCuc.length ; i ++){
			if (userId == $scope.listUserNamesOfTongCuc[i].userId){
				userName = $scope.listUserNamesOfTongCuc[i].userName;
				break;
			}
		}
		return userName;
	}

	function init(){
		console.log("Vào init PhanCong_Controller");
		$scope.title = title;
		$scope.congviec = angular.copy(phanConEntiTy);
		$scope.congviec.maCv = maCv;
		$scope.congviec.tenCv = tenCv;

		$scope.tenCv = tenCv;
		$scope.maCv = maCv;
		console.log($scope.congviec);

		if ($scope.typeCreate !== 2){
			$scope.isCreate = false;
			$scope.isModify = true;
		}else {
			$scope.isCreate = true;
			$scope.isModify = false;
		}

		if ($scope.congviec.maCv === "CV_CHQ"){
			$scope.type1 = false;
		} else if ($scope.congviec.maCv === "CV_KTMH"){
			$scope.type2 = false;
		} else {
			$scope.type2 = true;
			$scope.type1 = true;
		}
		getListUserOfTongCuc();

		getCucHQ ();

		if ($scope.typeCreate == 1){
			$scope.stt	   		  = parseInt($scope.congviec.stt);
			$scope.tuNgay  		  = new Date(getYearCv($scope.congviec.tuNgay), getMonthCv($scope.congviec.tuNgay), getDayCv($scope.congviec.tuNgay));
			$scope.denNgay		  = new Date(getYearCv($scope.congviec.denNgay), getMonthCv($scope.congviec.denNgay), getDayCv($scope.congviec.denNgay));
			$scope.matHang  	  = $scope.congviec.matHang === undefined ? "" : $scope.congviec.matHang;
			$scope.donVi.ma		  = $scope.congviec.maHq === undefined ? "" : $scope.congviec.maHq;
			$scope.user.userId    = parseInt($scope.congviec.userIdPa1);
			$scope.user.userName  = $scope.congviec.userNamePa1;
			$scope.fullNamePa1    = $scope.congviec.fullNamePa1;
			$scope.user2.userId   = parseInt($scope.congviec.userIdPa2);
			$scope.user2.userName = $scope.congviec.userNamePa2;
			$scope.fullNamePa2    = $scope.congviec.fullNamePa2;
			$scope.user3.userId   = parseInt($scope.congviec.userIdPa3);
			$scope.user3.userName = $scope.congviec.userNamePa3;
			$scope.fullNamePa3    = $scope.congviec.fullNamePa3;
			$scope.ghiChu         = $scope.congviec.ghiChu;
			$scope.typeNhapXuat   = $scope.congviec.nhx;
		}
	}

	function getListUserOfTongCuc(){
		Phancong_Service.GetUserOfTongCuc()
			.then(
				function(deferred){
					$scope.listUserNamesOfTongCuc = deferred;
				},
				function(errResponse){
					$PopupMessage.Error("Có lỗi trong quá trình xử lý thông tin.");
				}
			);
	}

	function getCucHQ (){
		quanLyToChucCNCTTKService.GetCucHQ()
		.then(
				function(deferred){
					$scope.listDonVi = deferred;
				},
				function(errResponse){
					$PopupMessage.Error("Có lỗi trong quá trình xử lý thông tin.");
				}
			);

	}

	function thietLapData(){
		var data	 = {};
		data.stt			= $scope.congviec.stt
		data.maCv	 		= $scope.maCv;
		data.tenCv	 		= $scope.tenCv;
		data.tuNgay 		= new Date ($scope.tuNgay);
		data.denNgay 		= new Date ($scope.denNgay);
		data.matHang 		= $scope.matHang === null ? "" : $scope.matHang;
		data.maHq 			= $scope.donVi.ma === null ? "" : $scope.donVi.ma;
		data.userIdPa1 		= parseInt($scope.user.userId);
		data.userNamePa1 	= GetUserNameByTongCuc($scope.user.userId);
		data.userIdPa2 		= parseInt($scope.user2.userId);
		data.userNamePa2 	= GetUserNameByTongCuc( $scope.user2.userId);
		data.userIdPa3 		= parseInt($scope.user3.userId);
		data.userNamePa3	= GetUserNameByTongCuc($scope.user3.userId);
		data.ghiChu   		= $scope.ghiChu;
		data.nhx			= $scope.typeNhapXuat;
		
		return data;
	}
	
	function reload(){
		$scope.tuNgay = "";
		$scope.denNgay = "";
		$scope.matHang = "";
		$scope.donVi.ma = "";
		$scope.user.userId = "";
		$scope.user2.userId = "";
		$scope.user3.userId = "";
		$scope.ghiChu = "";
		$scope.fullNamePa1 = "";
		$scope.fullNamePa2 = "";
		$scope.fullNamePa3 = "";
	}

	function formatDateToString(dateCondition) {
		var date = new Date(dateCondition);
		return date.getDate() + "/" + (date.getMonth()+ 1) + "/" + date.getFullYear();
	}

	function getDayCv (strDate){
		var date = new Date (strDate);
		return date.getDate();
	}

	function getMonthCv(strDate){
		var date = new Date (strDate);
		return date.getMonth();
	}

	function getYearCv (strDate){
		var date = new Date (strDate);
		return date.getFullYear();
	}
}]);


myApp.controller('ReportPhanCongCtrl', 
				['$scope',
				 '$window',
				 '$uibModal',
				 '$PopupMessage',
				 '$modalInstance',
				 'Url',
				  function ($scope,
				  			$window,
				  			$uibModal,
				  			$PopupMessage,
				  			$modalInstance,
				  			Url) {
			
$scope.Url = Url;
$scope.UrlPDF=Url+"&type=PDFATTACH";
$scope.cancel = function() {
	$modalInstance.dismiss('cancel');
};
}]);

