package com.tkhq.cmc.controller.rest;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.tkhq.cmc.common.Constants;
import com.tkhq.cmc.dto.TbsQtacLuongDTO;
import com.tkhq.cmc.model.TbsQtacLuongXuatkhau;
import com.tkhq.cmc.services.TbsQtacLuongXuatkhauService;
import com.tkhq.cmc.utils.Utils;

@Controller
public class TbsQtacLuongXuatkhauRestController {
	
	@Autowired
	private TbsQtacLuongXuatkhauService tbsQtacLuongXuatkhauService;
	
	@RequestMapping(value="/tbsQtacLuong", method=RequestMethod.GET)
	public ResponseEntity<TbsQtacLuongDTO> getAllData (){
		
		TbsQtacLuongDTO dto = new TbsQtacLuongDTO();
		List<TbsQtacLuongXuatkhau> listData = tbsQtacLuongXuatkhauService.findAll();
		long totalCount = tbsQtacLuongXuatkhauService.countTotal(Constants.EMPTY, Constants.EMPTY);
		dto.setContent(listData);
		dto.setTotalItems(totalCount);
		if(listData == null){
			return new ResponseEntity<TbsQtacLuongDTO>(dto, HttpStatus.NO_CONTENT);
		}
		return new ResponseEntity<TbsQtacLuongDTO>(dto, HttpStatus.OK);
		
	}
	
	@RequestMapping(value="/tbsQtacLuongById", method=RequestMethod.GET)
	public ResponseEntity<TbsQtacLuongXuatkhau> getDataById(String id){
		TbsQtacLuongXuatkhau dto = tbsQtacLuongXuatkhauService.findById(Long.parseLong(id));
		if(dto == null){
			return new ResponseEntity<TbsQtacLuongXuatkhau>(dto, HttpStatus.CONFLICT);
		}
		return new ResponseEntity<TbsQtacLuongXuatkhau>(dto, HttpStatus.OK);
	}
	
	@RequestMapping(value="/delete/tbsQtacLuong", method=RequestMethod.GET)
	public ResponseEntity<Integer> doDeleteData(String id){
		Long idDelete = Long.parseLong(id);
		TbsQtacLuongXuatkhau dto = tbsQtacLuongXuatkhauService.findById(idDelete);
		if(dto == null){
			return new ResponseEntity<Integer>(Constants.FAILED, HttpStatus.CONFLICT);
		}
		tbsQtacLuongXuatkhauService.delete(idDelete);
		return new  ResponseEntity<Integer>(Constants.SUCCESS, HttpStatus.OK);
	}
	
	@RequestMapping(value="/add/tbsQtacLuong", method=RequestMethod.POST)
	public ResponseEntity<Integer> doAddData(@RequestBody TbsQtacLuongXuatkhau tbsqtacdntrigianhapkhau){
		try {
			tbsQtacLuongXuatkhauService.insert(tbsqtacdntrigianhapkhau);
			return new  ResponseEntity<Integer>(Constants.SUCCESS, HttpStatus.CREATED);
		} catch (Exception e) {
			return new ResponseEntity<Integer>(Constants.FAILED, HttpStatus.CONFLICT);
		}
	}
	
	@RequestMapping(value="/update/tbsQtacLuong", method=RequestMethod.POST)
	public ResponseEntity<Integer> doUpdateData(@RequestBody TbsQtacLuongDTO paramDto){
		try {
			TbsQtacLuongXuatkhau dto = tbsQtacLuongXuatkhauService.findById(paramDto.getId());
			if (dto == null){
				return new ResponseEntity<Integer>(Constants.FAILED, HttpStatus.CONFLICT);
			}
			tbsQtacLuongXuatkhauService.update(paramDto);
			return new  ResponseEntity<Integer>(Constants.SUCCESS, HttpStatus.CREATED);
		} catch (Exception e) {
			return new ResponseEntity<Integer>(Constants.FAILED, HttpStatus.CONFLICT);
		}
	}
	
	@RequestMapping(value="/search/tbsQtacLuong", method=RequestMethod.POST)
	public ResponseEntity<List<TbsQtacLuongXuatkhau>> SearchData(@RequestBody TbsQtacLuongDTO tbsqtacluongdto){
		List<TbsQtacLuongXuatkhau> listData = null;
		try {
			int minRow = (tbsqtacluongdto.getCurrentPage() - 1) * tbsqtacluongdto.getPageSize();
			int maxRow = tbsqtacluongdto.getPageSize();
			
			long totalCount = tbsQtacLuongXuatkhauService.countTotal(tbsqtacluongdto.getMathongke(), 
																	Utils.escapeNull(tbsqtacluongdto.getLuonglonnhat()));
			if (totalCount == 0) {
				listData = new ArrayList<TbsQtacLuongXuatkhau>();
				return new ResponseEntity<List<TbsQtacLuongXuatkhau>>(listData, HttpStatus.ACCEPTED);
			}
			listData = tbsQtacLuongXuatkhauService.searchData(tbsqtacluongdto.getMathongke(), 
																Utils.escapeNull(tbsqtacluongdto.getLuonglonnhat()),
															    minRow, maxRow);
			return new ResponseEntity<List<TbsQtacLuongXuatkhau>>(listData, HttpStatus.OK);
		} catch (Exception e) {
			return new ResponseEntity<List<TbsQtacLuongXuatkhau>>(listData, HttpStatus.ACCEPTED);
		}
	}

}
