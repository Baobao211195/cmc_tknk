/**
 * 
 */
'use strict';

angular.module('myApp')
		.controller('Tbs_CangNNController', Tbs_CangNNController);
Tbs_CangNNController.$inject = [ '$scope', 'Tbs_CangNNService', 'pagerService',
		'$uibModal', '$state', '$PopupMessage' ];

function Tbs_CangNNController($scope, Tbs_CangNNService, pagerService,
		$uibModal, $state, $PopupMessage) {
	console.log('start Tbs_CangNNController');
	var self = this;
	self.lstCangNN = [];
	self.cangNNVnaccsEntity = {
		maCang : '',
		tenTP : '',
		maNuoc : '',
		tenNuoc : '',
		isChecked: false,
        addOrUpdate: ''
	}
	self.selectedList = [];
	self.checkAll = false;
	
	//Them moi row su dung popup start
    self.editRow = editRow;                
    self.showPopup = showPopup;
    self.remove = remove;
    self.animationsEnabled = true; 
		
	self.totalItems = 0;
	self.currentPage = 1;
	self.maxSize = 5;
	self.pageSize = 10;
	self.search = search;	 
	search(self.currentPage, self.pageSize);

	function search(currentPage, pageSize) {
		var param = {};
		param["maCang"] = $scope.maCang;
		param["tenNuoc"] = $scope.tenNuoc;
		param["tenTP"] = $scope.tenTP;
		param["maNuoc"] = $scope.maNuoc;
		param["currentPage"] = currentPage;
		param["pageSize"] = pageSize;
		
		console.log('search@param:', param);

		Tbs_CangNNService.searchCangNN(param).then(function(respone) {
			self.lstCangNN = respone.lstCangNN;
			self.totalItems = respone.totalCount;
			self.pageSize = parseInt(respone.pageSize);
			self.currentPage = parseInt(respone.currentPage);
		}, function(errResponse) {
			console.error(errResponse);
		});
	}
	function remove() {
		console.log('sss');
    	self.selectedList = [];        	
    	var selectedId = "";        	
    	for(var i = 0; i < self.lstCangNN.length; i++){
    		console.log('isChecked:',self.lstCangNN[i].isChecked);
    		if(self.lstCangNN[i].isChecked == true){
    			selectedId = self.lstCangNN[i].maCang;        			
    			self.selectedList.push(selectedId);
    		}
    	}
        console.log('Id to be deleted: ', self.selectedList);
        if(self.selectedList.length == 0){
        	angular.element(document.querySelector('.messageErrorArea')).val("Chưa chọn bản ghi nào để xóa");
        	return;
        }
        $PopupMessage.Confirm('Ban co chac chan muon xoa ban ghi',DeleteObject,null);
        
    }
	
	 function DeleteObject()
     {
     	//alert('Delete thanh cong ');
     	delCangNN(self.selectedList);
     };
     function delCangNN(chooseList) {
     	console.log('start delCangNN');
     	Tbs_CangNNService.delCangNN(chooseList)
             .then(
             		search(0, self.pageSize),
                 function (errResponse) {
                     console.error(errResponse);
                 }
             );
     }
	$scope.pageChanged = function() {
		console.log('Page changed to: ' + self.currentPage);
		search(self.currentPage, self.pageSize);
	};

		function reset() {
        	self.cangnnVnaccsEntity = {
            		maCang: '',
            		tenTP: '',
            		maNuoc: '',
            		tenNuoc: '',    	
            		isChecked: false,
            		addOrUpdate: ''
            };
            //$scope.myForm.$setPristine(); //reset Form
        }
        
        //Them moi row su dung popup
        $scope.addRow = function() {
        	reset(); //Lam moi entity
        	self.cangnnVnaccsEntity.addOrUpdate = 'add';
    		self.showPopup(self.lstcangNN, self.cangnnVnaccsEntity);
    	};
    	
    	function editRow(maCang){
    		console.log('Id to be edited', maCang);
            for (var i = 0; i < self.lstCangNN.length; i++) {
                if (self.lstCangNN[i].maCang === maCang) {
                    self.cangnnVnaccsEntity = angular.copy(self.lstCangNN[i]);
                    break;
                }
            }
            self.cangnnVnaccsEntity.addOrUpdate = 'update';
            self.showPopup(self.lstCangNN, self.cangnnVnaccsEntity);
            search(self.currentPage, self.pageSize);
    	}    	
    	
    	function showPopup(grid, row){
    		var modalInstance = $uibModal.open({
    			animation: self.animationsEnabled,
    			ariaLabelledBy: 'modal-title',
    			ariaDescribedBy: 'modal-body',
    			templateUrl: 'cangnnVnaccsEdit',
    			controller: 'cangnnVnaccsModalCtrl',
    			controllerAs: 'self',
    			resolve: {
    				grid : function() {
    					search(self.currentPage, self.pageSize);
						return grid;
					},
					row : function() {						
						return row;
					}
    			}
    		});
    		
    		modalInstance.result.then(function (data) {
    				if(data == 'success'){
    					self.currentPage = 1;
    					search(self.currentPage, self.pageSize);
    				}else{
    					console.log('Co loi xay ra');
    				}
    		    }, function () {
    		      //$log.info('modal-component dismissed at: ' + new Date());
    		    });
    	} 
}
angular.module('myApp').controller('cangnnVnaccsModalCtrl', cangnnVnaccsModalCtrl);
cangnnVnaccsModalCtrl.$inject = ['$uibModalInstance', 'grid', 'row', 'Tbs_CangNNService', '$PopupMessage']
function cangnnVnaccsModalCtrl($uibModalInstance, grid, row, Tbs_CangNNService, $PopupMessage) {
	var self = this;
	self.lstCangNN = angular.copy(grid);
	self.entity = angular.copy(row);
	console.log('start save data!');
	console.log(self.entity.addOrUpdate);
	self.message = '';
	  
	self.saveData = saveData;

	self.cancel = function () {
	    $uibModalInstance.dismiss('cancel');
	};
	  
	function saveData() {
		if (self.entity.addOrUpdate == 'add') {
			console.log('Saving New Row', self.entity);
			crtCangNN(self.entity);
        } else {
        	console.log('Updated row with maCang ', self.entity.maCang);
        	updCangNN(self.entity, self.entity.maCang);
        }
//		$uibModalInstance.close(self.message);
		if(self.message == 'success')
		{
			$PopupMessage.Success('Cap nhat thanh cong');			
			$uibModalInstance.close(self.message);
		}
		else{			
			return false;
		}
  	}
	
	function crtCangNN(entity) {
		Tbs_CangNNService.crtCangNN(entity)
            .then(
        		//fetchAllBieuThues,
            	//console.log('Insert thanh cong'),
            	self.message = 'success',
                function (errResponse) {
                    console.error('Error while creating data');
                }
            );
    }
	
	function updCangNN(entity, maCang) {
		Tbs_CangNNService.updCangNN(entity, maCang)
            .then(            
            	self.message = 'success',
                function (errResponse) {
                    console.error('Error while updating data');
                }
            );
    }
	
}