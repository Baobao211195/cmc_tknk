/**
 * 
 */
'use strict';

angular.module('myApp').controller('Tbs_ChuyenDeController',
		Tbs_ChuyenDeController);
Tbs_ChuyenDeController.$inject = [ '$scope', 'Tbs_ChuyenDeService',
		'pagerService', '$uibModal', '$PopupMessage'];

function Tbs_ChuyenDeController($scope, Tbs_ChuyenDeService, pagerService,
		$uibModal, $PopupMessage) {
	console.log('start Tbs_ChuyenDeController');
	var self = this;
	self.lstChuyenDe = [];
	self.chuyenDeEntity = {
		maCDe : '',
		tenCDe : '',
		maHang : '',
		motaHH : '',
		isChecked : false,
		addOrUpdate : ''
	}
	self.selectedList = [];
	self.checkAll = false;

	// Them moi row su dung popup start
	self.editRow = editRow;
	self.showPopup = showPopup;
	self.remove = remove;
	self.animationsEnabled = true;

	self.totalItems = 0;
	self.currentPage = 1;
	self.maxSize = 5;
	self.pageSize = 10;
	self.search = search;
	search(self.currentPage, self.pageSize);

	function search(currentPage, pageSize) {
		console.log('test');
		var param = {};
		param["maCDe"] = $scope.maCDe;
		param["tenCDe"] = $scope.tenCDe;
		param["maHang"] = $scope.maHang;
		param["motaHH"] = $scope.motaHH;
		param["currentPage"] = currentPage;
		param["pageSize"] = pageSize;

		console.log('search@param:', param);

		Tbs_ChuyenDeService.searchChuyenDe(param).then(function(respone) {
			self.lstChuyenDe = respone.lstChuyenDe;
			self.totalItems = respone.totalCount;
			self.pageSize = parseInt(respone.pageSize);
			self.currentPage = parseInt(respone.currentPage);
		}, function(errResponse) {
			console.error(errResponse);
		});
	}
	function remove() {
		self.selectedList = [];
		var selectedId = "";
		for (var i = 0; i < self.lstChuyenDe.length; i++) {
			console.log('isChecked:', self.lstChuyenDe[i].isChecked);
			if (self.lstChuyenDe[i].isChecked == true) {
				selectedId = self.lstChuyenDe[i].maCDe;
				self.selectedList.push(selectedId);
			}
		}
		console.log('Id to be deleted: ', self.selectedList);
		if (self.selectedList.length == 0) {
			angular.element(document.querySelector('.messageErrorArea')).val(
					"Chưa chọn bản ghi nào để xóa");
			return;
		}
		$PopupMessage.Confirm('Ban co chac chan muon xoa ban ghi',
				DeleteObject, null);		

	}

	function DeleteObject() {
		// alert('Delete thanh cong ');
		delChuyenDe(self.selectedList);
	}
	;
	function delChuyenDe(chooseList) {
		console.log('start delChuyenDe');		
		Tbs_ChuyenDeService.delChuyenDe(chooseList).then(
				search(0, self.pageSize), function(errResponse) {
					console.error(errResponse);
				});		
	}
	
	$scope.pageChanged = function() {
		console.log('Page changed to: ' + self.currentPage);
		search(self.currentPage, self.pageSize);
	};

	function reset() {
		self.chuyenDeEntity = {
			maCDe : '',
			tenCDe : '',
			maHang : '',
			motaHH : '',
			isChecked : false,
			addOrUpdate : ''
		};		
	}

	// Them moi row su dung popup
	$scope.addRow = function() {
		reset(); // Lam moi entity
		self.chuyenDeEntity.addOrUpdate = 'add';
		self.showPopup(self.lstChuyenDe, self.chuyenDeEntity);		
	};

	function editRow(maCDe) {
		console.log('Id to be edited', maCDe);
		for (var i = 0; i < self.lstChuyenDe.length; i++) {
			if (self.lstChuyenDe[i].maCDe === maCDe) {
				self.chuyenDeEntity = angular.copy(self.lstChuyenDe[i]);
				break;
			}
		}
		self.chuyenDeEntity.addOrUpdate = 'update';
		self.showPopup(self.lstChuyenDe, self.chuyenDeEntity);		
	}

	function showPopup(grid, row) {
		var modalInstance = $uibModal.open({
			animation : self.animationsEnabled,
			ariaLabelledBy : 'modal-title',
			ariaDescribedBy : 'modal-body',
			templateUrl : 'chuyendeEdit',
			controller : 'chuyenDeModalCtrl',
			controllerAs : 'self',
			resolve : {
				grid : function() {
					search(self.currentPage, self.pageSize);
					return grid;
				},
				row : function() {
					return row;
				}
			}
		});

		modalInstance.result.then(function(data) {
			if (data == 'success') {
				self.currentPage = 1;
				search(self.currentPage, self.pageSize);
			} else {
				console.log('Co loi xay ra');
			}
		}, function() {
			
		});
	}
}
angular.module('myApp').controller('chuyenDeModalCtrl', chuyenDeModalCtrl);
chuyenDeModalCtrl.$inject = [ '$uibModalInstance', 'grid', 'row',
		'Tbs_ChuyenDeService', '$PopupMessage' ]
function chuyenDeModalCtrl($uibModalInstance, grid, row, Tbs_ChuyenDeService,
		$PopupMessage) {
	var self = this;
	self.lstChuyenDe = angular.copy(grid);
	self.entity = angular.copy(row);
	console.log('start save data!');
	console.log(self.entity.addOrUpdate);
	self.message = '';

	self.saveData = saveData;

	self.cancel = function() {
		$uibModalInstance.dismiss('cancel');
	};

	function saveData() {
		if (self.entity.addOrUpdate == 'add') {
			console.log('Saving New Row', self.entity);
			crtChuyenDe(self.entity);
		} else {
			console.log('Updated row with maCDe ', self.entity.maCDe);
			updChuyenDe(self.entity, self.entity.maCDe);
		}
		// $uibModalInstance.close(self.message);
		if (self.message == 'success') {
			$PopupMessage.Success('Cap nhat thanh cong');
			$uibModalInstance.close(self.message);
		} else {
			return false;
		}
	}

	function crtChuyenDe(entity) {
		Tbs_ChuyenDeService.crtChuyenDe(entity).then(
			self.message = 'success', function(errResponse) {
			console.error('Error while creating data');
		});
	}

	function updChuyenDe(entity, maCDe) {
		Tbs_ChuyenDeService.updChuyenDe(entity, maCDe).then(
				self.message = 'success', function(errResponse) {
					console.error('Error while updating data');
				});
	}
}