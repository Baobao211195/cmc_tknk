package com.tkhq.cmc.dao;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import org.hibernate.Criteria;
import org.hibernate.criterion.Restrictions;
import org.springframework.stereotype.Repository;

import com.tkhq.cmc.dto.TbdSysPhancongCvDTO;
import com.tkhq.cmc.model.TbdSysPhancongCv;
import com.tkhq.cmc.utils.Utils;

@Repository
public class TbdSysPhancongCvDAOImpl extends BaseDAO<Long, TbdSysPhancongCv> implements TbdSysPhancongCvDAO {

	public void createPhancong(TbdSysPhancongCv entity) {
		try {
			this.persist(entity);
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

	public void deletePhancong(long status) {
		TbdSysPhancongCv entity = new TbdSysPhancongCv();
		entity.setStt(status);
		try {
			this.delete(entity);
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

	public TbdSysPhancongCv update(TbdSysPhancongCvDTO entity) {
		try {
			TbdSysPhancongCv phancong = new TbdSysPhancongCv(
					entity.getMaCv(),
					entity.getTenCv(),
					entity.getTuNgay(),
					entity.getDenNgay(),
					entity.getMatHang(),
					entity.getMaThke(),
					entity.getUserIdPa1(),
					entity.getUserNamePa1(),
					entity.getUserIdPa2(),
					entity.getUserNamePa2(),
					entity.getUserIdPa3(),
					entity.getUserNamePa3(),
					entity.getGhiChu(),
					entity.getMaHq(),
					entity.getNhx()

					);
			
			this.update(phancong);
			return phancong;
		} catch (Exception e) {
			return null;
		}

	}

	@SuppressWarnings("unchecked")
	public List<TbdSysPhancongCv> getAllPhancong() {
		Criteria cri = this.getSession().createCriteria(TbdSysPhancongCv.class);
		List<TbdSysPhancongCv> listPhancong = cri.list();
		if (listPhancong != null) {
			return listPhancong;
		} else
			return null;
	}

	@SuppressWarnings("unchecked")
	@Override
	public List<TbdSysPhancongCv> findByMaCV(String maCv) {
		Criteria cri = this.getSession().createCriteria(TbdSysPhancongCv.class);
		List<TbdSysPhancongCv> list = cri.add(Restrictions.eq("maCv", maCv)).list();
		if (list != null) {
			return list;
		} else {
			return null;
		}
	}

	@SuppressWarnings("unchecked")
	public List<TbdSysPhancongCv> search(String type, String maCv) {
		Criteria cri = this.getSession().createCriteria(TbdSysPhancongCv.class);

		if (!Utils.isEmpty(type) && !"".equals(type)) {
			cri.add(Restrictions.eq("nhx", type));
		}
		if (!Utils.isEmpty(maCv) && !"".equals(maCv)) {
			cri.add(Restrictions.eq("maCv", maCv));
		}

		List<TbdSysPhancongCv> list = cri.list();

		return list;
	}

	@Override
	public void deleteList(String s) {
		List<String> compile = new ArrayList<String>(Arrays.asList(s.split(",")));
//		List<Long> stts = new ArrayList<Long>();
		for (int i = 0; i < compile.size(); i++) {
			Long l = Long.parseLong(compile.get(i));
			TbdSysPhancongCv pc = new TbdSysPhancongCv();
			pc.setStt(l);
			delete(pc);

		}
//		Query query = this.getSession()
//				.createQuery("Delete from TBD_SYS_PHANCONG_CV pc where pc.stt in(:list)" );
//		query.setParameterList("list", stts);
//		query.executeUpdate();

	}
}
