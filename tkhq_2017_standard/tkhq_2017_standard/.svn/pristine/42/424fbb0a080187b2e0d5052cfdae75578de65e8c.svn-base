App.factory('ThayDoiDoTHQTNVService', [ '$http', '$q', 'contextPath',
		'$httpParamSerializerJQLike', ThayDoiDoTHQTNVService ]);
function ThayDoiDoTHQTNVService($http, $q, contextPath,
		$httpParamSerializerJQLike) {

	var REST_SERVICE_URI = contextPath + '/tbs_mahs_dkgh/';
	var ROOT_API = 'http://10.224.65.169:8080/tkhq_2017_standard/bcpt';

	var semaphore = false;

	var factory = {
		GetCucHQ : GetCucHQ,
		GetChiCucHQByCuc : GetChiCucHQByCuc,
		TaiDuLieu : TaiDuLieu
	};

	return factory;

	function GetCucHQ() {
		var deferred = $q.defer();
		$http.get(ROOT_API + '/GetCustom').then(function(response) {
			deferred.resolve(response.data);
		}, function(errResponse) {
			console.error('Có lỗi xảy ra trong khi get cục HQ');
			deferred.reject(errResponse);
		});

		return deferred.promise;
	}

	function GetChiCucHQByCuc(maCuc) {
		var deferred = $q.defer();
		$http.get(ROOT_API + '/GetSubCustom?maCucHQ=' + maCuc).then(
				function(response) {
					deferred.resolve(response.data);
				}, function(errResponse) {
					console.error('Có lỗi xảy ra trong khi get chi cục HQ');
					deferred.reject(errResponse);
				});
		return deferred.promise;
	}

	function TaiDuLieu(maCucHQ, maChicucHQ, nhx, loai_ky, tu_ngay, den_ngay,
			ky, thang, nam, page, offset) {
		var deferred = $q.defer();
		var api = ROOT_API + '/XemThayDoi/BuocNVTHKE?maCucHQ=' + maCucHQ
				+ '&maChicucHQ=' + maChicucHQ + '&nhx=' + nhx + '&loai_ky='
				+ loai_ky + '&tu_ngay=' + tu_ngay + '&den_ngay=' + den_ngay
				+ '&ky=' + ky + '&thang=' + thang + '&nam=' + nam + '&page='
				+ page + '&offset=' + offset;
		/* api = ROOT_API+'/ThayDoiDoNVHQ/TongThe'; */
		$http.get(api).then(function(response) {
			deferred.resolve(response.data);
		}, function(errResponse) {
			console.error('Lỗi TaiDuLieu');
			deferred.reject(errResponse);
		});
		return deferred.promise;
	}
}

angular.module('myApp').service('modalService',
		[ '$uibModal', function($uibModal) {

			var modalDefaults = {
				backdrop : true,
				keyboard : true,
				modalFade : true,
				animation : true,
				templateUrl : 'bieuThueEdit',
				controller : 'TBSMahsDkghController',
				controllerAs : 'self'
			};

			// var modalOptions = {
			// closeButtonText: 'Close',
			// actionButtonText: 'OK',
			// headerText: 'Proceed?',
			// bodyText: 'Perform this action?'
			// };

			this.showModal = function(grid, row) {
				// Create temp objects to work with since we're in a singleton
				// service
				var tempModalDefaults = {
					resolve : {
						grid : function() {
							return grid;
						},
						row : function() {
							return row;
						}
					}
				};
				// var tempModalOptions = {};

				// Map angular-ui modal custom defaults to modal defaults
				// defined in service
				angular.extend(tempModalDefaults, modalDefaults);

				// Map modal.html $scope custom properties to defaults defined
				// in service
				// angular.extend(tempModalOptions, modalOptions);

				// if (!tempModalDefaults.controller) {
				// tempModalDefaults.controller = function ($scope,
				// $modalInstance) {
				// $scope.modalOptions = tempModalOptions;
				// $scope.modalOptions.ok = function (result) {
				// $modalInstance.close(result);
				// };
				// $scope.modalOptions.close = function (result) {
				// $modalInstance.dismiss('cancel');
				// };
				// }
				// }

				return $uibModal.open(tempModalDefaults).result;
			};

		} ]);


