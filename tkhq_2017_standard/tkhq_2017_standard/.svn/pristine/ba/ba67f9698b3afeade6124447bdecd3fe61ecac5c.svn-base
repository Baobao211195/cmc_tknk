package com.tkhq.cmc.controller.rest;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.tkhq.cmc.common.Constants;
import com.tkhq.cmc.dto.TbsQtacDongiaXuatkhauDTO;
import com.tkhq.cmc.model.TbsQtacDongiaXuatkhau;
import com.tkhq.cmc.services.TbsQtacDongiaXuatkhauService;
import com.tkhq.cmc.utils.Utils;

@Controller
public class TbsQtacDongiaXuatkhauRestController {
	@Autowired
	private TbsQtacDongiaXuatkhauService tbsQtacDongiaXuatkhauService;
	
	@RequestMapping(value="/tbsQtacDongiaXuatkhau", method=RequestMethod.GET)
	public ResponseEntity<TbsQtacDongiaXuatkhauDTO> getAllData (){
		
		TbsQtacDongiaXuatkhauDTO dto = new TbsQtacDongiaXuatkhauDTO();
		List<TbsQtacDongiaXuatkhau> listData = tbsQtacDongiaXuatkhauService.findAll();
		long totalCount = tbsQtacDongiaXuatkhauService.countTotal(Constants.EMPTY, Constants.EMPTY, Constants.EMPTY);
		dto.setContent(listData);
		dto.setTotalItems(totalCount);
		if(listData == null){
			return new ResponseEntity<TbsQtacDongiaXuatkhauDTO>(dto, HttpStatus.NO_CONTENT);
		}
		return new ResponseEntity<TbsQtacDongiaXuatkhauDTO>(dto, HttpStatus.OK);
		
	}
	
	@RequestMapping(value="/tbsQtacDongiaXuatkhauById", method=RequestMethod.GET)
	public ResponseEntity<TbsQtacDongiaXuatkhau> getDataById(String id){
		TbsQtacDongiaXuatkhau dto = tbsQtacDongiaXuatkhauService.findById(Long.parseLong(id));
		if(dto == null){
			return new ResponseEntity<TbsQtacDongiaXuatkhau>(dto, HttpStatus.CONFLICT);
		}
		return new ResponseEntity<TbsQtacDongiaXuatkhau>(dto, HttpStatus.OK);
	}
	
	@RequestMapping(value="/delete/tbsQtacDongiaXuatkhau", method=RequestMethod.GET)
	public ResponseEntity<Integer> doDeleteData(String id){
		Long idDelete = Long.parseLong(id);
		TbsQtacDongiaXuatkhau dto = tbsQtacDongiaXuatkhauService.findById(idDelete);
		if(dto == null){
			return new ResponseEntity<Integer>(Constants.FAILED, HttpStatus.CONFLICT);
		}
		tbsQtacDongiaXuatkhauService.delete(idDelete);
		return new  ResponseEntity<Integer>(Constants.SUCCESS, HttpStatus.OK);
	}
	
	@RequestMapping(value="/add/tbsQtacDongiaXuatkhau", method=RequestMethod.POST)
	public ResponseEntity<Integer> doAddData(@RequestBody TbsQtacDongiaXuatkhau tbsqtacdntrigianhapkhau){
		try {
			tbsQtacDongiaXuatkhauService.insert(tbsqtacdntrigianhapkhau);
			return new  ResponseEntity<Integer>(Constants.SUCCESS, HttpStatus.CREATED);
		} catch (Exception e) {
			return new ResponseEntity<Integer>(Constants.FAILED, HttpStatus.CONFLICT);
		}
	}
	
	@RequestMapping(value="/update/tbsQtacDongiaXuatkhau", method=RequestMethod.POST)
	public ResponseEntity<Integer> doUpdateData(@RequestBody TbsQtacDongiaXuatkhauDTO paramDto){
		try {
			TbsQtacDongiaXuatkhau dto = tbsQtacDongiaXuatkhauService.findById(paramDto.getId());
			if (dto == null){
				return new ResponseEntity<Integer>(Constants.FAILED, HttpStatus.CONFLICT);
			}
			tbsQtacDongiaXuatkhauService.update(paramDto);
			return new  ResponseEntity<Integer>(Constants.SUCCESS, HttpStatus.CREATED);
		} catch (Exception e) {
			return new ResponseEntity<Integer>(Constants.FAILED, HttpStatus.CONFLICT);
		}
	}
	
	@RequestMapping(value="/search/tbsQtacDongiaXuatkhau", method=RequestMethod.POST)
	public ResponseEntity<List<TbsQtacDongiaXuatkhau>> SearchData(@RequestBody TbsQtacDongiaXuatkhauDTO tbsQtacDongiaXuatkhaudto){
		List<TbsQtacDongiaXuatkhau> listData = null;
		try {
			int minRow = (tbsQtacDongiaXuatkhaudto.getCurrentPage() - 1) * tbsQtacDongiaXuatkhaudto.getPageSize();
			int maxRow = tbsQtacDongiaXuatkhaudto.getPageSize();
			
			long totalCount = tbsQtacDongiaXuatkhauService.countTotal(tbsQtacDongiaXuatkhaudto.getMathongke(), 
																	Utils.escapeNull(tbsQtacDongiaXuatkhaudto.getDongialonnhat()),
																	Utils.escapeNull(tbsQtacDongiaXuatkhaudto.getDongianhonhat()));
			if (totalCount == 0) {
				listData = new ArrayList<TbsQtacDongiaXuatkhau>();
				return new ResponseEntity<List<TbsQtacDongiaXuatkhau>>(listData, HttpStatus.ACCEPTED);
			}
			listData = tbsQtacDongiaXuatkhauService.searchData(tbsQtacDongiaXuatkhaudto.getMathongke(), 
																Utils.escapeNull(tbsQtacDongiaXuatkhaudto.getDongialonnhat()),
																Utils.escapeNull(tbsQtacDongiaXuatkhaudto.getDongianhonhat()),
															    minRow, maxRow);
			return new ResponseEntity<List<TbsQtacDongiaXuatkhau>>(listData, HttpStatus.OK);
		} catch (Exception e) {
			return new ResponseEntity<List<TbsQtacDongiaXuatkhau>>(listData, HttpStatus.ACCEPTED);
		}
	}
}
